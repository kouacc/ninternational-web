---
import ProjectCard from "./ProjectCard.astro";
import i18next, { t } from "i18next";
import { getCollection } from "astro:content"
import FilterButton from "./FilterButton.astro";

const allProjects = await getCollection("projects");


const tags1 = allProjects.map((p) => p.data.projectLanguage).flat();
const tags2 = allProjects.map((p) => p.data.projectSystem).flat();

const tags_lang = [...new Set(tags1)]; //Keeps only unique tags
const tags_sys = [...new Set(tags2)]; //Keeps only unique tags

---

<section x-data="{filters: false}">
  <h2>{t("projects.title")}</h2>
  <button @click="filters = ! filters"><i class="fa-solid fa-filter"></i></button>
</section>
<ul id="tags_lang" data-tags={tags_lang} x-show="filters">
    {tags_lang.map((tag) => <FilterButton {tag} />)}
</ul>
<ul id="tags_sys" data-tags={tags_sys} x-show="filters">
    {tags_sys.map((tag) => <FilterButton {tag} />)}
</ul>
<ul class="cards">
    {allProjects.map(post => (
        <ProjectCard
            projectName={post.data.projectName}
            projectLink={`/projects/${post.slug}/`}
            projectImg={post.data.projectImg}
            projectLanguage={post.data.projectLanguage}
            projectSystem={post.data.projectSystem}
     />))}
</ul>

<script>
    function hideBlogs_lang(evt) {
      let selectedTag = evt.currentTarget.getAttribute("data-type");
      let tagElement = document.getElementById("tags_lang");
      let tags = tagElement.dataset.tags;
      tags = tags.split(",");
      tags.splice(tags.indexOf(selectedTag), 1);
  
      tags.forEach((t) => {
        const elementsToHide = document.getElementsByClassName(t);
        for (let i = 0; i < elementsToHide.length; i++) {
          elementsToHide[i].style.display = "none";
        }
      });
  
      let elementsToShow = document.getElementsByClassName(selectedTag);
      for (let i = 0; i < elementsToShow.length; i++) {
        elementsToShow[i].style.display = "flex";
      }
    }

    function hideBlogs_sys(evt) {
      let selectedTag = evt.currentTarget.getAttribute("data-type");
      let tagElement = document.getElementById("tags_sys");
      let tags = tagElement.dataset.tags;
      tags = tags.split(",");
      tags.splice(tags.indexOf(selectedTag), 1);
  
      tags.forEach((t) => {
        const elementsToHide = document.getElementsByClassName(t);
        for (let i = 0; i < elementsToHide.length; i++) {
          elementsToHide[i].style.display = "none";
        }
      });
  
      let elementsToShow = document.getElementsByClassName(selectedTag);
      for (let i = 0; i < elementsToShow.length; i++) {
        elementsToShow[i].style.display = "flex";
      }
    }
  
    // Event listener for the button click
    const input = document.querySelectorAll("#blogFilter");
    input.forEach((e) => {
      e.addEventListener("change", hideBlogs_lang);
      e.addEventListener("change", hideBlogs_sys);
    });
</script>

<style>

    section {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 2rem;
    }

    section button {
        background: none;
        border: none;
        cursor: pointer;
        font-size: 1.5rem;
    }

    section i {
        font-size: 1.7rem;
    }

    #tags {
        
    }
    
    .cards {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        margin: 0;
        padding: 0;
        gap: 3.5rem;
    }

    h2 {
		font-family: forma-djr-display, sans-serif;
		font-style: normal;
		font-weight: 700;
	}

    @media (max-width: 630px) {
        ul {
            grid-template-columns: 1fr;
            padding: 0 1rem;
        }
    }
</style>